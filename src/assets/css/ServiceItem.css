/* ServiceItem.css */
.service-item {
  padding: 1rem;
  border-radius: 1rem;
  color: white;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
  height: 16rem;
  width: 16rem;
  transition: width 0.6s ease-in-out, background-color 0.6s ease-in-out;
  overflow: hidden;
  background-color: var(--initial-color);
  position: relative;
  z-index: 10; /* Aseguramos que tenga un z-index más bajo que .code */
}

.service-container {
  display: flex;
  width: 100%;
  gap: 1rem;
  position: relative;
}

.service-container.reverse {
  flex-direction: row-reverse;
}

.alternate-item {
  padding: 1rem;
  color: rgb(255, 255, 255);
  background-color: #343434;
  align-items: flex-end;
  justify-content: flex-start;
  display: flex;
  flex-grow: 9;
  border-radius: 1rem;
  height: 16rem;
  width: 16rem;
  overflow: hidden;
  position: relative;
  z-index: 10; /* Aseguramos que tenga un z-index más bajo que .code */
}

.alternate-item::after {
  content: "";
  position: absolute;
  top: 0;
  width: 100%;
  height: 100%;
  background-size: 20px 20px;
  background-repeat: repeat;
  transition: transform 6s ease-in-out;
  transform: scale(0.6);
}

.alternate-item .content {
  width: 100%;
  transition: color 3s ease-in-out, transform 0.6s ease-in-out;
  bottom: 0;
  left: 0;
  padding: 1rem;
}

.alternate-item .content p {
  position: absolute;
  z-index: 0;
  left: -2rem;
  bottom: 1rem;
  font-size: 8rem;
  transition: transform 0.6s ease-in-out;
}

.service-item .content {
  width: 100%;
  padding-left: 0rem;
  padding-right: 4rem;
  transition: padding 0.6s ease-in-out;
  transform-origin: right;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.service-item p {
  margin: 0;
  margin-left: 0;
  padding-right: 0;
}

.service-item p:first-of-type {
  font-size: 1.25rem;
  font-weight: lighter;
}

.service-item p:last-of-type {
  margin-top: 0.5rem;
  font-weight: bold;
  font-size: 1.5rem;
}

.service-item::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 0;
  height: 100%;
  background-color: var(--hover-color);
  z-index: -1;
  transition: width 0.6s ease-in-out;
}

/* Añadir las siguientes reglas */
.service-container:hover .service-item {
  width: 50%;
  background-color: var(--hover-color);
}

.service-container:hover .service-item::before {
  width: 100%;
}

/* Ajustar padding basado en reverse */
.service-container:hover .service-item:not(.reverse) .content {
  padding-left: 19rem;
  padding-right: 0rem;
  align-items: flex-start;
}

.service-container.reverse:hover .service-item .content {
  padding-left: 0rem;
  padding-right: 19rem;
  align-items: flex-start;
}

.service-container:hover .alternate-item .content {
  color: var(--hover-color);
  transform: scale(1.3);
}

.service-container:hover .alternate-item .content p {
  transform: scale(1.1);
}

.service-container:hover .alternate-item::after {
  transform: scale(1.2);
}

/* Media queries para responsividad */
@media (max-width: 767px) {
  .service-item .content p {
    display: none;
  }

  .alternate-item::before {
    content: attr(data-description);
    position: absolute;
    top: 1rem;
    left: 1rem;
    right: 1rem;
    font-size: 1rem;
    font-weight: lighter;
    color: white;
  }
}

/* Para pantallas extra grandes (XL) */
@media (min-width: 1500px) {
  .service-item, .alternate-item {
    padding: 3rem;
    height: 21rem;
    width: 22rem;
  }

  .service-item .content {
    padding-left: 0rem;
    padding-right: 5rem;
  }

  .service-container:hover .service-item:not(.reverse) .content {
    padding-left: 30rem;
  }

  .service-container.reverse:hover .service-item .content {
    padding-left: 0rem;
    padding-right: 30rem;
  }
}

/* Para pantallas grandes (laptops grandes y desktops) */
@media (min-width: 1200px) and (max-width: 1399px) {
  .service-item {
    padding: 2rem;
    height: 16rem;
    width: 20rem;
  }

  .service-item .content {
    padding-left: 0rem;
    padding-right: 5rem;
  }

  .service-container:hover .service-item:not(.reverse) .content {
    padding-left: 20rem;
  }

  .service-container.reverse:hover .service-item .content {
    padding-left: 0rem;
    padding-right: 20rem;
  }
}

/* Para pantallas medianas (tabletas) */
@media (max-width: 1199px) and (min-width: 768px) {
  .service-item, .alternate-item{
    padding: 0.5rem;
    height: 14rem;
    width: 14rem;
  }

  .service-item .content {
    padding-left: 0rem;
    padding-right: 3rem;
  }

  .service-container:hover .service-item:not(.reverse) .content {
    padding-left: 15rem;
  }

  .service-container.reverse:hover .service-item .content {
    padding-left: 0rem;
    padding-right: 15rem;
  }
}

/* Para pantallas pequeñas (móviles) */
@media (max-width: 767px) {
  .service-item {
    display: none;
  }
}

/*  */

.code {
  font-size: 4rem;
  display: flex;
  flex-wrap: nowrap;
  color: hsl(0 0% 100%);
  border-radius: 2rem;
  background: hsla(0, 2%, 91%, 0.049);
  justify-content: center;
  box-shadow: 0 1px hsl(0 0% 100% / 0.25) inset;
  z-index: 20;
  position: relative;
}

.service-container:hover .code {
  color: var(--hover-color);
  z-index: 30;
}

.code:hover {
  cursor: grab;
}

.digit {
  display: flex;
  height: 100%;
  padding: 5.5rem 1rem;
}

.digit:focus-visible {
  outline-color: hsla(0, 100%, 46%, 0.25);
  outline-offset: 1rem;
}

.digit span {
  scale: calc(var(--active, 0) + 0.5);
  filter: blur(calc((1 - var(--active, 0)) * 1rem));
  transition: scale calc(((1 - var(--active, 0)) + 0.2) * 1s), filter calc(((1 - var(--active, 0)) + 0.2) * 1s);
}

ul {
  padding: 0;
  margin: 0;
}

.digit:first-of-type {
  padding-left: 5rem;
}
.digit:last-of-type {
  padding-right: 5rem;
}


.digit:is(:hover, :focus-visible) {
  --active: var(--lerp-0);
}
.digit:is(:hover, :focus-visible) + .digit,
.digit:has(+ .digit:is(:hover, :focus-visible)) {
  --active: var(--lerp-1);
}
.digit:is(:hover, :focus-visible) + .digit + .digit,
.digit:has(+ .digit + .digit:is(:hover, :focus-visible)) {
  --active: var(--lerp-2);
}
.digit:is(:hover, :focus-visible) + .digit + .digit + .digit,
.digit:has(+ .digit + .digit + .digit:is(:hover, :focus-visible)) {
  --active: var(--lerp-3);
}
.digit:is(:hover, :focus-visible) + .digit + .digit + .digit + .digit,
.digit:has(+ .digit + .digit + .digit + .digit:is(:hover, :focus-visible)) {
  --active: var(--lerp-4);
}
.digit:is(:hover, :focus-visible) + .digit + .digit + .digit + .digit + .digit,
.digit:has(+ .digit + .digit + .digit + .digit + .digit:is(:hover, :focus-visible)) {
  --active: var(--lerp-5);
}
